/****************************************************************************
** Meta object code from reading C++ file 'wakatime-plugin.cpp'
**
** Created by: The Qt Meta Object Compiler version 68 (Qt 6.8.2)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qmetatype.h>
#include <QtCore/qplugin.h>

#include <QtCore/qtmochelpers.h>

#include <memory>


#include <QtCore/qxptype_traits.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'wakatime-plugin.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 68
#error "This file was generated using the moc from 6.8.2. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

#ifndef Q_CONSTINIT
#define Q_CONSTINIT
#endif

QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
QT_WARNING_DISABLE_GCC("-Wuseless-cast")
namespace {
struct qt_meta_tag_ZN22wakatime_pluginFactoryE_t {};
} // unnamed namespace


#ifdef QT_MOC_HAS_STRINGDATA
static constexpr auto qt_meta_stringdata_ZN22wakatime_pluginFactoryE = QtMocHelpers::stringData(
    "wakatime_pluginFactory"
);
#else  // !QT_MOC_HAS_STRINGDATA
#error "qtmochelpers.h not found or too old."
#endif // !QT_MOC_HAS_STRINGDATA

Q_CONSTINIT static const uint qt_meta_data_ZN22wakatime_pluginFactoryE[] = {

 // content:
      12,       // revision
       0,       // classname
       0,    0, // classinfo
       0,    0, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

       0        // eod
};

Q_CONSTINIT const QMetaObject wakatime_pluginFactory::staticMetaObject = { {
    QMetaObject::SuperData::link<KPluginFactory::staticMetaObject>(),
    qt_meta_stringdata_ZN22wakatime_pluginFactoryE.offsetsAndSizes,
    qt_meta_data_ZN22wakatime_pluginFactoryE,
    qt_static_metacall,
    nullptr,
    qt_incomplete_metaTypeArray<qt_meta_tag_ZN22wakatime_pluginFactoryE_t,
        // Q_OBJECT / Q_GADGET
        QtPrivate::TypeAndForceComplete<wakatime_pluginFactory, std::true_type>
    >,
    nullptr
} };

void wakatime_pluginFactory::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    auto *_t = static_cast<wakatime_pluginFactory *>(_o);
    (void)_t;
    (void)_c;
    (void)_id;
    (void)_a;
}

const QMetaObject *wakatime_pluginFactory::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *wakatime_pluginFactory::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_ZN22wakatime_pluginFactoryE.stringdata0))
        return static_cast<void*>(this);
    if (!strcmp(_clname, "org.kde.KPluginFactory"))
        return static_cast< KPluginFactory*>(this);
    return KPluginFactory::qt_metacast(_clname);
}

int wakatime_pluginFactory::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = KPluginFactory::qt_metacall(_c, _id, _a);
    return _id;
}

#ifdef QT_MOC_EXPORT_PLUGIN_V2
static constexpr unsigned char qt_pluginMetaDataV2_wakatime_pluginFactory[] = {
    0xbf, 
    // "IID"
    0x02,  0x76,  'o',  'r',  'g',  '.',  'k',  'd', 
    'e',  '.',  'K',  'P',  'l',  'u',  'g',  'i', 
    'n',  'F',  'a',  'c',  't',  'o',  'r',  'y', 
    // "className"
    0x03,  0x76,  'w',  'a',  'k',  'a',  't',  'i', 
    'm',  'e',  '_',  'p',  'l',  'u',  'g',  'i', 
    'n',  'F',  'a',  'c',  't',  'o',  'r',  'y', 
    // "MetaData"
    0x04,  0xa3,  0x67,  'K',  'P',  'l',  'u',  'g', 
    'i',  'n',  0xa2,  0x6b,  'D',  'e',  's',  'c', 
    'r',  'i',  'p',  't',  'i',  'o',  'n',  0x78, 
    0x1e,  'A',  ' ',  'W',  'a',  'k',  'a',  'T', 
    'i',  'm',  'e',  ' ',  'p',  'l',  'u',  'g', 
    'i',  'n',  ' ',  'f',  'o',  'r',  ' ',  'K', 
    'D',  'e',  'v',  'e',  'l',  'o',  'p',  0x64, 
    'N',  'a',  'm',  'e',  0x6f,  'w',  'a',  'k', 
    'a',  't',  'i',  'm',  'e',  '-',  'p',  'l', 
    'u',  'g',  'i',  'n',  0x73,  'X',  '-',  'K', 
    'D',  'e',  'v',  'e',  'l',  'o',  'p',  '-', 
    'C',  'a',  't',  'e',  'g',  'o',  'r',  'y', 
    0x66,  'G',  'l',  'o',  'b',  'a',  'l',  0x6f, 
    'X',  '-',  'K',  'D',  'e',  'v',  'e',  'l', 
    'o',  'p',  '-',  'M',  'o',  'd',  'e',  0x63, 
    'G',  'U',  'I', 
    0xff, 
};
QT_MOC_EXPORT_PLUGIN_V2(wakatime_pluginFactory, wakatime_pluginFactory, qt_pluginMetaDataV2_wakatime_pluginFactory)
#else
QT_PLUGIN_METADATA_SECTION
Q_CONSTINIT static constexpr unsigned char qt_pluginMetaData_wakatime_pluginFactory[] = {
    'Q', 'T', 'M', 'E', 'T', 'A', 'D', 'A', 'T', 'A', ' ', '!',
    // metadata version, Qt version, architectural requirements
    0, QT_VERSION_MAJOR, QT_VERSION_MINOR, qPluginArchRequirements(),
    0xbf, 
    // "IID"
    0x02,  0x76,  'o',  'r',  'g',  '.',  'k',  'd', 
    'e',  '.',  'K',  'P',  'l',  'u',  'g',  'i', 
    'n',  'F',  'a',  'c',  't',  'o',  'r',  'y', 
    // "className"
    0x03,  0x76,  'w',  'a',  'k',  'a',  't',  'i', 
    'm',  'e',  '_',  'p',  'l',  'u',  'g',  'i', 
    'n',  'F',  'a',  'c',  't',  'o',  'r',  'y', 
    // "MetaData"
    0x04,  0xa3,  0x67,  'K',  'P',  'l',  'u',  'g', 
    'i',  'n',  0xa2,  0x6b,  'D',  'e',  's',  'c', 
    'r',  'i',  'p',  't',  'i',  'o',  'n',  0x78, 
    0x1e,  'A',  ' ',  'W',  'a',  'k',  'a',  'T', 
    'i',  'm',  'e',  ' ',  'p',  'l',  'u',  'g', 
    'i',  'n',  ' ',  'f',  'o',  'r',  ' ',  'K', 
    'D',  'e',  'v',  'e',  'l',  'o',  'p',  0x64, 
    'N',  'a',  'm',  'e',  0x6f,  'w',  'a',  'k', 
    'a',  't',  'i',  'm',  'e',  '-',  'p',  'l', 
    'u',  'g',  'i',  'n',  0x73,  'X',  '-',  'K', 
    'D',  'e',  'v',  'e',  'l',  'o',  'p',  '-', 
    'C',  'a',  't',  'e',  'g',  'o',  'r',  'y', 
    0x66,  'G',  'l',  'o',  'b',  'a',  'l',  0x6f, 
    'X',  '-',  'K',  'D',  'e',  'v',  'e',  'l', 
    'o',  'p',  '-',  'M',  'o',  'd',  'e',  0x63, 
    'G',  'U',  'I', 
    0xff, 
};
QT_MOC_EXPORT_PLUGIN(wakatime_pluginFactory, wakatime_pluginFactory)
#endif  // QT_MOC_EXPORT_PLUGIN_V2

QT_WARNING_POP
